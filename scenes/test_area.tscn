[gd_scene load_steps=22 format=2]

[ext_resource path="res://scenes/player.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/coil.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/coin.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/platform_big.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/wingman.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/carrot.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/fly_powerup.tscn" type="PackedScene" id=7]
[ext_resource path="res://scenes/parallax_01.tscn" type="PackedScene" id=8]
[ext_resource path="res://scenes/power_up_bar.tscn" type="PackedScene" id=9]
[ext_resource path="res://sprites/HUD/coin_gold.png" type="Texture" id=10]
[ext_resource path="res://fonts/Chocolate Bar Demo.otf" type="DynamicFontData" id=11]
[ext_resource path="res://scripts/coin_counter.gd" type="Script" id=12]
[ext_resource path="res://scripts/spikes.gd" type="Script" id=13]
[ext_resource path="res://sprites/Environment/spikes_top.png" type="Texture" id=14]

[sub_resource type="GDScript" id=1]
script/source = "tool
extends StaticBody2D

var textures = [
	\"res://sprites/Environment/ground_cake.png\",
	\"res://sprites/Environment/ground_grass.png\",
	\"res://sprites/Environment/ground_sand.png\",
	\"res://sprites/Environment/ground_snow.png\",
	\"res://sprites/Environment/ground_stone.png\",
	\"res://sprites/Environment/ground_wood.png\"
]

export(int , \"CAKE\" , \"GRASS\" , \"SAND\" , \"SNOW\" , \"STONE\" , \"WOOD\") var texture = 0 setget set_texture


func _ready():
	pass

func _draw():
	$sprite.texture = load(textures[texture])

func set_texture(val):
	texture = val
	if is_inside_tree() && Engine.editor_hint:
		update()
"

[sub_resource type="GDScript" id=2]
script/source = "tool
extends StaticBody2D

var textures = [
	\"res://sprites/Environment/ground_cake.png\",
	\"res://sprites/Environment/ground_grass.png\",
	\"res://sprites/Environment/ground_sand.png\",
	\"res://sprites/Environment/ground_snow.png\",
	\"res://sprites/Environment/ground_stone.png\",
	\"res://sprites/Environment/ground_wood.png\"
]

export(int , \"CAKE\" , \"GRASS\" , \"SAND\" , \"SNOW\" , \"STONE\" , \"WOOD\") var texture = 0 setget set_texture


func _ready():
	pass

func _draw():
	$sprite.texture = load(textures[texture])

func set_texture(val):
	texture = val
	if is_inside_tree() && Engine.editor_hint:
		update()
"

[sub_resource type="GDScript" id=3]
script/source = "tool
extends StaticBody2D

var textures = [
	\"res://sprites/Environment/ground_cake.png\",
	\"res://sprites/Environment/ground_grass.png\",
	\"res://sprites/Environment/ground_sand.png\",
	\"res://sprites/Environment/ground_snow.png\",
	\"res://sprites/Environment/ground_stone.png\",
	\"res://sprites/Environment/ground_wood.png\"
]

export(int , \"CAKE\" , \"GRASS\" , \"SAND\" , \"SNOW\" , \"STONE\" , \"WOOD\") var texture = 0 setget set_texture


func _ready():
	pass

func _draw():
	$sprite.texture = load(textures[texture])

func set_texture(val):
	texture = val
	if is_inside_tree() && Engine.editor_hint:
		update()
"

[sub_resource type="GDScript" id=4]
script/source = "tool
extends StaticBody2D

var textures = [
	\"res://sprites/Environment/ground_cake.png\",
	\"res://sprites/Environment/ground_grass.png\",
	\"res://sprites/Environment/ground_sand.png\",
	\"res://sprites/Environment/ground_snow.png\",
	\"res://sprites/Environment/ground_stone.png\",
	\"res://sprites/Environment/ground_wood.png\"
]

export(int , \"CAKE\" , \"GRASS\" , \"SAND\" , \"SNOW\" , \"STONE\" , \"WOOD\") var texture = 0 setget set_texture


func _ready():
	pass

func _draw():
	$sprite.texture = load(textures[texture])

func set_texture(val):
	texture = val
	if is_inside_tree() && Engine.editor_hint:
		update()
"

[sub_resource type="GDScript" id=5]
script/source = "tool
extends StaticBody2D

var textures = [
	\"res://sprites/Environment/ground_cake.png\",
	\"res://sprites/Environment/ground_grass.png\",
	\"res://sprites/Environment/ground_sand.png\",
	\"res://sprites/Environment/ground_snow.png\",
	\"res://sprites/Environment/ground_stone.png\",
	\"res://sprites/Environment/ground_wood.png\"
]

export(int , \"CAKE\" , \"GRASS\" , \"SAND\" , \"SNOW\" , \"STONE\" , \"WOOD\") var texture = 0 setget set_texture


func _ready():
	pass

func _draw():
	$sprite.texture = load(textures[texture])

func set_texture(val):
	texture = val
	if is_inside_tree() && Engine.editor_hint:
		update()
"

[sub_resource type="DynamicFont" id=6]
size = 70
font_data = ExtResource( 11 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 34.8891, 24.1653 )

[node name="test_area" type="Node2D"]

[node name="plataforms" type="Node2D" parent="."]

[node name="platform_big" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 127.555, 805.061 )
script = SubResource( 1 )
texture = 1

[node name="platform_big2" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 430.952, 804.93 )
script = SubResource( 2 )
texture = 1

[node name="platform_big3" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 2250.24, 585.107 )
script = SubResource( 3 )
texture = 0

[node name="platform_big4" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 3530.48, 596.852 )
script = SubResource( 3 )
texture = 1

[node name="platform_big5" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 4405.51, 611.534 )
script = SubResource( 3 )
texture = 1

[node name="platform_big6" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 5691.63, 582.171 )
script = SubResource( 4 )
texture = 1

[node name="platform_big7" parent="plataforms" instance=ExtResource( 4 )]
position = Vector2( 730.742, 806.744 )
script = SubResource( 5 )
texture = 1

[node name="player" parent="." instance=ExtResource( 1 )]
position = Vector2( 146.417, 644.652 )
collision_mask = 2

[node name="coil2" parent="." instance=ExtResource( 2 )]
position = Vector2( 2240.51, 496.787 )

[node name="coin" parent="." instance=ExtResource( 3 )]
position = Vector2( 1525.87, 588.19 )

[node name="coin5" parent="." instance=ExtResource( 3 )]
position = Vector2( 6234.48, 348.37 )

[node name="coin4" parent="." instance=ExtResource( 3 )]
position = Vector2( 814.686, 470.4 )

[node name="coin2" parent="." instance=ExtResource( 3 )]
position = Vector2( 1309.02, 383.778 )

[node name="coin3" parent="." instance=ExtResource( 3 )]
position = Vector2( 1038.87, 381.577 )

[node name="wingman" parent="." instance=ExtResource( 5 )]
position = Vector2( 1552.33, 689.282 )

[node name="wingman2" parent="." instance=ExtResource( 5 )]
position = Vector2( 6617.7, 562.491 )

[node name="fly_powerup" parent="." instance=ExtResource( 7 )]
time = 4.0

[node name="parallax" parent="." instance=ExtResource( 8 )]
modulate_l1 = Color( 0.647059, 0.886275, 0.901961, 1 )
modulate_l2 = Color( 0.878431, 0.92549, 0.921569, 1 )
modulate_l3 = Color( 0.12549, 0.647059, 0.109804, 1 )
modulate_l4 = Color( 0.0156863, 0.286275, 0.0588235, 1 )

[node name="carrot" parent="." instance=ExtResource( 6 )]
position = Vector2( 7127.48, 215.577 )

[node name="HUD" type="CanvasLayer" parent="."]

[node name="power_up_bar" parent="HUD" instance=ExtResource( 9 )]
visible = false

[node name="coin_counter" type="Node2D" parent="HUD"]
script = ExtResource( 12 )

[node name="coin_gold" type="Sprite" parent="HUD/coin_counter"]
position = Vector2( 54.9725, 52.2965 )
texture = ExtResource( 10 )

[node name="coins" type="Label" parent="HUD/coin_counter"]
margin_left = 107.83
margin_top = 14.9243
margin_right = 355.83
margin_bottom = 80.9243
custom_fonts/font = SubResource( 6 )
custom_colors/font_color = Color( 0.945098, 0.823529, 0.168627, 1 )
text = "99999999"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="spikes" type="Area2D" parent="."]
position = Vector2( 805.141, 732.769 )
collision_layer = 0
script = ExtResource( 13 )
__meta__ = {
"_edit_group_": true
}

[node name="sprite" type="Sprite" parent="spikes"]
texture = ExtResource( 14 )

[node name="shape" type="CollisionShape2D" parent="spikes"]
position = Vector2( -0.875977, 1.75194 )
shape = SubResource( 7 )
[connection signal="body_entered" from="spikes" to="spikes" method="_on_spikes_body_entered"]
